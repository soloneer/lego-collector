name: Daily Data Sync

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch: # Allow manual triggering

jobs:
  sync-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm run install:all

    - name: Download latest CSV data
      run: npm run fetch-data
      env:
        CSV_SOURCE_URL: ${{ secrets.CSV_SOURCE_URL }}

    - name: Debug network connectivity and get IPv4
      run: |
        echo "Testing DNS resolution..."
        nslookup db.fxtiehnxxnlfaeccejqc.supabase.co || echo "DNS lookup failed"
        
        echo "Getting IPv4 address..."
        IPV4_ADDR=$(dig +short -4 db.fxtiehnxxnlfaeccejqc.supabase.co | head -1)
        echo "IPv4 Address: $IPV4_ADDR"
        
        if [ ! -z "$IPV4_ADDR" ]; then
          echo "Testing IPv4 connectivity..."
          ping -c 2 $IPV4_ADDR || echo "IPv4 ping failed"
          
          # Extract password from original DATABASE_URL and create IPv4-only version
          PASSWORD=$(echo "$DATABASE_URL" | sed -n 's/.*postgres:\([^@]*\)@.*/\1/p')
          IPV4_DATABASE_URL="postgresql://postgres:$PASSWORD@$IPV4_ADDR:5432/postgres"
          echo "DATABASE_URL_IPV4=$IPV4_DATABASE_URL" >> $GITHUB_ENV
          echo "Using IPv4 DATABASE_URL"
        else
          echo "Could not resolve IPv4 address"
        fi
        
    - name: Import data to Supabase
      run: npm run import-data
      env:
        DATABASE_URL: ${{ env.DATABASE_URL_IPV4 || secrets.DATABASE_URL }}
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}

    - name: Create data sync report
      run: |
        echo "## Data Sync Report - $(date)" >> sync-report.md
        echo "" >> sync-report.md
        echo "### Files Updated:" >> sync-report.md
        ls -la data/latest/ >> sync-report.md
        echo "" >> sync-report.md
        echo "### Import Log:" >> sync-report.md
        if [ -f "data/latest/download_log.json" ]; then
          cat data/latest/download_log.json >> sync-report.md
        fi

    - name: Upload sync report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: sync-report-${{ github.run_number }}
        path: sync-report.md
        retention-days: 7

    - name: Notify on failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: `Daily Data Sync Failed - ${new Date().toDateString()}`,
            body: `The automated data sync workflow failed on ${new Date().toISOString()}. 
                   
                   Please check the workflow logs for details: ${context.payload.repository.html_url}/actions/runs/${context.runId}`,
            labels: ['automation', 'data-sync', 'bug']
          })